package au.csiro.casda.access;

/*
 * #%L
 * CSIRO ASKAP Science Data Archive
 * %%
 * Copyright (C) 2015 Commonwealth Scientific and Industrial Research Organisation (CSIRO) ABN 41 687 119 230.
 * %%
 * Licensed under the CSIRO Open Source License Agreement (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License in the LICENSE file.
 * #L%
 */


import au.csiro.casda.logging.CasdaEvent;
import au.csiro.casda.logging.CasdaLogMessageBuilderFactory;
import au.csiro.casda.logging.CasdaMessageBuilder;

/**
 * Casda Events generated by the CasdaDataAccess application
 * 
 * Copyright 2014, CSIRO Australia All rights reserved.
 * 
 */
public enum CasdaDataAccessEvents implements CasdaEvent
{
    /**
     * New access request received
     */
    E037("New data access request received",
            "New request received to access data. Method: %s. Assigned job ID %s"),
    /**
     * Start retrieving data for request
     */
    E038("Retrieving data for data access", "Started retrieving data for request ID %s"),
    /**
     * Data access is ready
     */
    E039("Data retrieved",
            "Data retrieved successfully for request ID %s] [volumeKB: %d] [volumeRetrievedKB: %d] "
            + "[volumeAlreadyCachedKB: %d"),
    /**
     * Start downloading a file
     */
    E040("Data access initiated", "Data access has started for request ID %s, file %s"),
    /**
     * Finish downloading a file
     */
    E041("Data access complete",
            "Data access complete for request ID %s, file %s] [volumeKB: %d] [fileType: %s] [downloadMode: %s"),
    /**
     * Not enough space in cache
     */
    E082("Failed to retrieve data for access",
            "Unable to retrieve data for data access request due to no capacity on CX_FS3. Request id %s"),
    /**
     * Failed to process retrieve file from archive
     */
    E030("Failed to retrieve data from filesystem",
            "Unable to retrieve data for data access request. Malformed parameters. Requested %s was: %s"),
    /**
     * Invalid file request
     */
    E100("Invalid data access request",
            "Unable to retrieve data for data access request. Malformed parameters. Requested %s was: %s"),

    /**
     * Error contacting VO Tools
     */
    E102("Failed to retrieve data from VO Tools",
            "Unable to retrieve data from VO Tools for data access request. Requested %s was: %s"),

    /**
     * Could not create checksum file for catalogue
     */
    E106("Unable to generate checksum for catalogue files",
            "Data access request %s was unable to be completed as the checksum creation for catalogue files failed."),
    /**
     * User do not have access to requested resource
     */
    E107("Failed login to CASDA Admin Tools",
            "Failed login to %s"),
    
    /**
     * Info log for artifact transfer from VO Tools to data-access (FS3)
     */
    E134("Data retrieved",
            "Data retrieved successfully] "
            + "[startTime: %s] "
            + "[endTime: %s] "           
            + "[source: %s] "
            + "[destination: %s] "
            + "[volumeKB: %d] "
            + "[fileId: %s"),
            
    /**
     * CacheException was thrown when processing a job
     */
    E147("Failed to retrieve data from filesystem",
            "Unable to complete data access request %s because of a problem caching the files.");

    private String type;
    private String formatString;

    private CasdaDataAccessEvents(String type, String formatString)
    {
        this.type = type;
        this.formatString = formatString;
    }

    @Override
    public String getCode()
    {
        return this.name();
    }

    @Override
    public String getFormatString()
    {
        return this.formatString;
    }

    @Override
    public String getType()
    {
        return this.type;
    }
    
    /**
     * Creates a message builder for the given event.
     * 
     * @return the message builder
     */
    public CasdaMessageBuilder<?> messageBuilder()
    {
        return CasdaLogMessageBuilderFactory.getCasdaMessageBuilder(this);
    }

}
